{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","isExpanded","handleExpandEvent","setState","this","event","props","className","tabIndex","summary","Date","start","dateTime","toLocaleDateString","year","month","day","timeZone","location","description","href","htmlLink","target","rel","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","onChange","type","placeholder","onFocus","style","display","NumberOfEvents","eventCount","handleCountChanged","htmlFor","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","protocol","host","pathname","history","pushState","newurl","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.53fc0cd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        isExpanded: false\r\n    }\r\n\r\n     handleExpandEvent = () => {\r\n        if (this.state.isExpanded) {\r\n            this.setState({\r\n                isExpanded: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isExpanded: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isExpanded } = this.state;\r\n        const { event } = this.props;\r\n        return (\r\n            <div className=\"event-item__container\" tabIndex={0}>\r\n                <div className=\"event-data__collapsed\">\r\n                    <div className=\"event-data__flex\">\r\n                        <h1>{event.summary}</h1>\r\n                        <p>{new Date(event.start.dateTime).toLocaleDateString(\r\n                            'en-gb', { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'utc'})}</p>\r\n                    </div>\r\n                    \r\n                    <p>{event.location}</p>\r\n                </div>\r\n                { isExpanded ? <div className=\"event-data__expanded\">\r\n                    <h2>About</h2>\r\n                    <p>{event.description}</p>\r\n                    <a href={event.htmlLink} target=\"_blank\" rel=\"noreferrer\">See details on Google Calender</a>\r\n                </div> : null}\r\n                <button \r\n                    className=\"event-item__details-button\" \r\n                    onClick={this.handleExpandEvent}>\r\n                        {isExpanded ? \"Hide Details\" : \"Show Details\"}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n\r\n        return (\r\n            <ul className=\"event-list\">\r\n                {events.map((event) => {\r\n                    return (\r\n                        <li key={event.id}>\r\n                            <Event event={event}/>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        })\r\n        this.setState({\r\n            query: value,\r\n            suggestions\r\n        })\r\n    }\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        })\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        const { query, suggestions, showSuggestions } = this.state;\r\n        const { locations, updateEvents } = this.props;\r\n        return (\r\n            <div className=\"city-search__container\">\r\n                <input \r\n                    onChange={this.handleInputChanged} \r\n                    type=\"text\" \r\n                    className=\"city-search__input\"\r\n                    placeholder=\"Search for a City\"\r\n                    value={query}\r\n                    onFocus={() => this.setState({showSuggestions: true})}>\r\n                </input>\r\n                <ul \r\n                    className=\"city-search__suggestions\"\r\n                    style={showSuggestions ? {} : { display: 'none'}}>\r\n                    {suggestions.map((suggestion) => {\r\n                        return (\r\n                            <li \r\n                                key={suggestion} \r\n                                className=\"city-suggestion\"\r\n                                onClick={() => this.handleItemClicked(suggestion)}>{suggestion}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                    <li \r\n                        key=\"all\"  \r\n                        className=\"city-suggestion\"\r\n                        onClick={() => this.handleItemClicked('all')}>\r\n                        <b>See All Cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        eventCount: 32\r\n    }\r\n\r\n    handleCountChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            eventCount: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { eventCount } = this.state;\r\n        return (\r\n            <div>\r\n                <label \r\n                    htmlFor=\"event-number\"\r\n                    className=\"number-of-events__label\">\r\n                        Number of Events\r\n                </label>\r\n                <input\r\n                    className=\"number-of-events__input\"\r\n                    type=\"number\"\r\n                    id=\"event-number\"\r\n                    value={eventCount}\r\n                    onChange={this.handleCountChanged}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n       },\r\n       {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"organizer\": {\r\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n         \"self\": true\r\n        },\r\n        \"start\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n         \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n         \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n       }\r\n]\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport './nprogress.css';\r\n\r\nexport const extractLocations = (events) => {\r\n    let extractLocations = events.map((event) => event.location);\r\n    let locations = [...new Set(extractLocations)];\r\n    return locations;\r\n}\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n    return result;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        'https://hymncvcewd.execute-api.us-east-2.amazonaws.com/dev/api/token/' + encodeCode\r\n    )\r\n    .then((res) => {\r\n        return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem('access_token', access_token);\r\n    return access_token;\r\n}\r\n\r\nconst removeQuery = () => {\r\n    const { protocol, host, pathname } = window.location;\r\n    if (window.history.pushState && window.location.pathname) {\r\n        let newurl = protocol + '//' + host + pathname;\r\n        window.history.pushState('', '', newurl);\r\n    } else {\r\n        let newurl = protocol + '//' + host;\r\n        window.history.pushState('', '', newurl);\r\n    }\r\n}\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = 'https://hymncvcewd.execute-api.us-east-2.amazonaws.com/dev/api/get-events/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            let locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n}\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n    if(!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access-token');\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get('code');\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                'https://hymncvcewd.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url'\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken\r\n}","import React, { Component } from 'react';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport './App.scss';\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      events: [],\n      locations: []\n    }\n  }\n \n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events,\n          locations: extractLocations(events)\n        })\n      }\n    });\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n      events :\n      events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      })\n    })\n  }\n\n  componentWillMount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const { events, locations } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"app__navigation-bar\">\n          <h1>MeetUp</h1>\n          <CitySearch locations={locations} updateEvents={this.updateEvents}/>\n          <NumberOfEvents />\n        </div>\n        <EventList events={events} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}